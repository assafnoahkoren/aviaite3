// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  email          String        @unique
  password       String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Threads        Thread[]
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id], onDelete: NoAction)
  isActive       Boolean       @default(true)
  accessControls AccessControl[]
}

model Organization {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Users     User[]
}

model Thread {
  id             String   @id @default(uuid())
  openaiThreadId String
  userId         String
  User           User     @relation(fields: [userId], references: [id], onDelete: NoAction)
  assistantId    String
  profileId      String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model AccessControl {
  id          String   @id @default(uuid())
  userId      String
  assetId     String
  assetType   String
  accessType  String
  accessLevel Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
